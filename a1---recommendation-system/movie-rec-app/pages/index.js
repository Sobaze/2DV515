import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'

import { useEffect, useState } from 'react'

import RecUsers from '../components/recommendedUsers'
import MovieRec from '../components/MovieRec'
import SelectUser from '../components/SelectUsers'
import SelectSimilarity from '../components/SelectSimilarity'

import { getUserRec, recUserMovies } from './api/userRecommendation'

export default function Home({users}) {
   const [state, setState] = useState({
     users: users,
     userId: '',
     similarity: '',
     count: '',
     result: [],
     search: ''
   })
   const handleClick = (e) => {
  }

  useEffect(() => {
    const getMatchingUsersTable = async () => {
      const result = await getUserRec(state.userId, state.similarity)
      const res = result.slice(0, state.count)
      setState((state) => {
        const tempState = {...state}
        tempState.result = res
        return tempState
      })
      console.log(state);
    }
    
    if(state.userId !== '' && state.count !== '' && state.similarity !== '' && state.search === 'MatchUsers' ) {
      getMatchingUsersTable()
    }
  }, [state.count, state.userId, state.similarity, state.search] )

  useEffect(() => {
    const getUserMovieRec = async () => {
      const result = await recUserMovies( state.userId, state.similarity)
      const res = result.slice(0, state.count)
      setState((state) => {
        const tempState = {...state}
        tempState.result = res
        return tempState
      })
      console.log(state);
    }
    if( state.userId !== '' && state.count !== '' && state.similarity !== '' && state.search === 'MovieRec'){
      getUserMovieRec()
    }
  }, [state.count, state.userId, state.similarity, state.search])

  const handleFindMatchingUsers = () => {
    const searchStatus = 'MatchUsers'
    const tempState = {...state}
    tempState.search = searchStatus
    setState(tempState)
  }
  const handleMovieRec = () => {
    const searchStatus = 'MovieRec'
    const tempState = {...state}
    tempState.search = searchStatus
    setState(tempState)
  }

  const handleSelectUser = (e) => {
    const user = e.target.value
    const tempState = {...state}
    tempState.userId = user
    setState(tempState)
  }

  const handleSelectSimilarity = (e) => {
    const sim = e.target.value
    const tempState = {...state}
    tempState.similarity = sim
    setState(tempState)
  }

  const handleCount = (e) => {
    const c = e.target.value
    const tempState = {...state}
    tempState.count = c
    setState(tempState)
  }
 
  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <div>
          
          <SelectUser label="User: " state={state} onSelectUser={handleSelectUser}  />
          <SelectSimilarity label="Similarity :" state={state} onSelectSim={handleSelectSimilarity} />

          <input type="text" id="results" name="res" onChange={handleCount} />
        </div>
        <div>
          <button onClick={handleFindMatchingUsers}>Find top matching users</button>
          <button onClick={handleMovieRec}>Find recommended movies</button>
          <button onClick={handleClick}>Find recommendations, item-based</button>
        </div>
        {state.result.length > 0 && state.search === 'MatchUsers'
        ? <RecUsers state={state}  />
        : null
        }
        {state.result.length > 0 && state.search === 'MovieRec' 
        ? <MovieRec state={state} />
        : null}
      </main>
      <div>
      </div>
    </div>
  )
}


export async function getStaticProps() {
    const users = await fetch('http://localhost:3000/api/users').then((response) => response.json())
    return {
      props: {
        users
      }
    }
}
